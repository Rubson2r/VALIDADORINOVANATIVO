plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.inovatickets.validador'
    compileSdk 34

    defaultConfig {
        applicationId "com.inovatickets.validador"
        minSdk 24
        targetSdk 34
        versionCode 8
        versionName "2.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        // ===== AUTO-UPDATE (lendo do gradle.properties) =====
        def updateUrl = project.findProperty("UPDATE_JSON_URL") ?: "https://api.github.com/repos/renantopac/ValidadorInova/releases/latest"
        def ghToken   = project.findProperty("GITHUB_TOKEN") ?: ""

        buildConfigField "String", "UPDATE_JSON_URL", "\"${updateUrl}\""
        buildConfigField "String", "GITHUB_TOKEN",     "\"${ghToken}\""
        // ====================================================
    }

    signingConfigs {
        release {
            // Todos lidos do gradle.properties (ou de env vars no CI)
            def storeFilePath = project.findProperty("RELEASE_STORE_FILE") ?: ""
            if (storeFilePath) {
                storeFile file(storeFilePath)
            }
            storePassword project.findProperty("RELEASE_STORE_PASSWORD") ?: ""
            keyAlias      project.findProperty("RELEASE_KEY_ALIAS") ?: ""
            keyPassword   project.findProperty("RELEASE_KEY_PASSWORD") ?: ""
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            // Opcional, mas útil para testar update com a MESMA assinatura:
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }
}

androidComponents {
    // Renomeia o APK com tipo, versão e timestamp
    onVariants(selector().all()) { variant ->
        variant.outputs.forEach { output ->
            def appName = "InovaTickets"
            def type    = variant.buildType                         // "debug" ou "release"
            def vName   = output.versionName.orNull ?: android.defaultConfig.versionName
            def vCode   = output.versionCode.orNull ?: android.defaultConfig.versionCode
            def ts      = new Date().format("yyyyMMdd-HHmm")        // ex: 20250811-1915
            output.outputFileName.set("${appName}-${type}-${vName}.${vCode}-${ts}.apk")
        }
    }
}

// Usado pelo workflow pra ler versão
tasks.register("printVersion") {
    doLast {
        println("VERSION_NAME=${android.defaultConfig.versionName}")
        println("VERSION_CODE=${android.defaultConfig.versionCode}")
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.7"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.8.2"

    // Room + KSP
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"

    // (Você tinha hilt-android; se não usa Hilt de fato, pode remover)
    implementation 'com.google.dagger:hilt-android:2.57'

    // Retrofit/OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'

    // ZXing
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.google.zxing:core:3.5.3'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.3.2"

    // Fragment KTX
    implementation "androidx.fragment:fragment-ktx:1.8.1"

    // ViewPager2 / TabLayout
    implementation "androidx.viewpager2:viewpager2:1.1.0"
    implementation 'com.google.android.material:material:1.12.0'

    // SwipeRefreshLayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'

    // CameraX (se ainda usa)
    implementation "androidx.camera:camera-core:1.3.4"
    implementation "androidx.camera:camera-camera2:1.3.4"
    implementation "androidx.camera:camera-lifecycle:1.3.4"
    implementation "androidx.camera:camera-view:1.3.4"

    // Testes
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
